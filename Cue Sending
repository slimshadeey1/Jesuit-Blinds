/**
Each Blinds Arduino listens on port 8888 and has a hardcoded IP address

Up/Down Motion: M followed by an integer 1-100. Example: Sending "M50" brings blinds down 50%

Tilt Motion: T followed by an integer 1-100. Example: Send "T25" tilts the blinds by 25% closed

Stop: "S" will stop both up/down and tilt motions. 

Upon receiving the command, the Arduino will respond will a reply packet containing the string "acknowledged"
 */

// import UDP library
import hypermedia.net.*;


UDP udp;  // define the UDP object

/**
 * init
 */
void setup() {

  // create a new datagram connection on port 6000
  // and wait for incomming message
  udp = new UDP( this, 6000 );
  //udp.log( true ); 		// <-- printout the connection activity
  udp.listen( true );
}

//process events
void draw() {;}

/** 
 * on key pressed event:
 * send the string message over the network
 */
void keyPressed() {
    
    String message  = "M50";	// the message to send
    String ip       = "192.168.30.65";	// the remote IP address
    int port        = 8888;		// the destination port
    
    // formats the message for Pd
    message = message+"";
    // send the message
    udp.send( message, ip, port );
    
}

/**
 * To perform any action on datagram reception, you need to implement this 
 * handler in your code. This method will be automatically called by the UDP 
 * object each time he receive a nonnull message.
 * By default, this method have just one argument (the received message as 
 * byte[] array), but in addition, two arguments (representing in order the 
 * sender IP address and his port) can be set like below.
 */
// void receive( byte[] data ) { 			// <-- default handler
void receive( byte[] data, String ip, int port ) {	// <-- extended handler
  
  
  // get the "real" message =
  // forget the ";\n" at the end <-- !!! only for a communication with Pd !!!
  data = subset(data, 0, data.length-2);
  String message = new String( data );
  
  // print the result
  println( "receive: \""+message+"\" from "+ip+" on port "+port );
}
